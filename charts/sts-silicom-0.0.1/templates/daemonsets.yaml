apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "node.tsync.name" . }}
  namespace: {{.Release.Namespace}}
  labels:
    app: {{ template "node.tsync.name" . }}
spec:
  selector:
    matchLabels:
      app: {{ template "node.tsync.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "node.tsync.name" . }}
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{ template "node.name" . }}
{{- range $k, $v := .Values.NodeSelectors }}
        {{ $k }}: "{{ $v }}"
{{- end }}
#      serviceAccount: {{ .Values.ServiceAccount }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{ .Values.Images.GrpcTsyncd }}
        imagePullPolicy: Always
        name: {{template "node.grpc.name" . }}
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_ADMIN
        ports:
        - containerPort: {{.Values.GrpcSvcPort}}
          name: {{template "node.grpc.name" . }}
      - image: {{.Values.Images.Tsyncd}}
        imagePullPolicy: Always
        name: {{ template "node.tsync.name" . }}
        env:
          - name: WAIT_FOR_GPS
            value: {{.Values.EnableGPS | quote}}
          - name: GPS_SVC_PORT
            value: "{{.Values.GpsSvcPort}}"
        args:
        - --zap-log-level=10
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: {{printf "%.*s-cfg" 11 .Release.Name | quote}}
            mountPath: /etc/tsyncd/tsyncd.conf
            subPath: tsyncd.conf
        securityContext:
          privileged: true
      volumes:
      - name: devfs
        hostPath:
          path: /dev
      - name: {{printf "%.*s-cfg" 11 .Release.Name | quote}}
        configMap:
          defaultMode: 0777
          name: {{printf "%.*s-cfg" 11 .Release.Name | quote}}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{ template "node.phc2sys.name" . }}
  name: {{ template "node.phc2sys.name" . }}
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      app: {{ template "node.phc2sys.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "node.phc2sys.name" . }}
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{ template "node.name" . }}
{{- range $k, $v := .Values.NodeSelectors}}
        {{ $k }}: {{ $v | quote -}}
{{- end}}
#      serviceAccount: {{ .Values.ServiceAccount }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.Values.Images.Phc2Sys}}
        name: {{ template "node.phc2sys.name" . }}
        imagePullPolicy: Always
        env:
          - name: WAIT_FOR_GPS
            value: {{.Values.EnableGPS | quote}}
          - name: GPS_SVC_PORT
            value: {{.Values.GpsSvcPort | quote}}
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_TIME
      volumes:
        - name: devfs
          hostPath:
            path: /dev

{{- if .Values.EnableGPS }}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{ template "node.gps.name" . }}
  name: {{ template "node.gps.name" . }}
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      app: {{ template "node.gps.name" . }}
  template:
    metadata:
      labels:
        app: {{ template "node.gps.name" . }}
    spec:
      shareProcessNamespace: true
      nodeSelector:
{{- range $k, $v := .Values.NodeSelectors }}
        {{ $k }}: "{{ $v }}"
{{- end }}
#      serviceAccount: {{ .Values.ServiceAccount }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.Values.Images.TsyncExtts}}
        name: {{ template "node.tsync_extts.name" . }}
        imagePullPolicy: Always
        volumeMounts:
        - name: devfs
          mountPath: /dev
        env:
        - name: WAIT_FOR_GPS
          value: {{.Values.EnableGPS | quote}}
{{- if eq .Values.ProfileId "2"}}
        - name: GM_MODE
          value: "-g"
{{- end}}
        - name: GPS_SVC_PORT
          value: {{.Values.GpsSvcPort | quote}}
      - image: {{.Values.Images.Gpsd}}
        imagePullPolicy: Always
        name: {{ template "node.gps.name" . }}
        ports:
        - containerPort: {{.Values.GpsSvcPort}}
          name: {{ template "node.gps.name" . }}
        env:
          - name: GPS_SVC_PORT
            value: {{.Values.GpsSvcPort | quote}}
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          seLinuxOptions:
            level: "s0"
      volumes:
        - name: devfs
          hostPath:
            path: /dev
{{- end}}
