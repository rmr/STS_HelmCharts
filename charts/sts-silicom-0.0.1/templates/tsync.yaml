apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Release.Name}}-tsync-conf
  namespace: {{.Release.Namespace}}
data:
  tsyncd.conf: |
    {{.Configuration}}

---


{{- if .Values.EnableGPS }}
apiVersion: v1
kind: Service
metadata:
  name: {{.ServicePrefix}}-gpsd
  namespace: {{.Release.Namespace}}
  labels:
    sts.silicom.com/svc: gpsd
spec:
  type: NodePort
  selector:
    app: {{.Release.Name}}-{{.Values.NodeName}}-gpsd
  ports:
    - protocol: TCP
      port: {{.Values.GpsSvcPort}}
      targetPort: {{.Values.GpsSvcPort}}

---
{{end}}

apiVersion: v1
kind: Service
metadata:
  name: {{.ServicePrefix}}-tsyncd
  namespace: {{.Release.Namespace}}
  labels:
    sts.silicom.com/svc: tsyncd
spec:
  type: NodePort
  selector:
    app: {{.Release.Name}}-{{.Values.NodeName}}-tsync
  ports:
    - protocol: TCP
      port: {{.Values.GrpcSvcPort}}
      targetPort: {{.Values.GrpcSvcPort}}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.Release.Name}}-{{.Values.NodeName}}-tsync
  name: {{.Release.Name}}-{{.Values.NodeName}}-tsync
  namespace: {{.Release.Namespace}}
  annotations:
    openshift.io/scc: {{.Release.Name}}
spec:
  selector:
    matchLabels:
      app: {{.Release.Name}}-{{.Values.NodeName}}-tsync
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.Release.Name}}-{{.Values.NodeName}}-tsync
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.Values.NodeName}}
        sts.silicom.com/ice-driver-available: "true"
{{- range $k, $v := .Values.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: sts-tsync
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.Values.Images.GrpcTsyncd}}
        imagePullPolicy: Always
        name: {{.Values.NodeName}}-grpc-tsyncd
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_ADMIN
        # readinessProbe:
        #   tcpSocket:
        #     port: {{.Values.GrpcSvcPort}}
        #   initialDelaySeconds: 300
        #   periodSeconds: 60
        # livenessProbe:
        #   tcpSocket:
        #     port: {{.Values.GrpcSvcPort}}
        #   initialDelaySeconds: 60
        #   periodSeconds: 60
        ports:
        - containerPort: {{.Values.GrpcSvcPort}}
          name: {{.ServicePrefix}}-tsyncd
      - image: {{.Values.Images.Tsyncd}}
        imagePullPolicy: Always
        name: {{.Values.NodeName}}-tsync
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{- end}}
          - name: GPS_SVC_PORT
            value: "{{.Values.GpsSvcPort}}"
        args:
        - --zap-log-level=10
        volumeMounts:
          - name: devfs
            mountPath: /dev
          - name: {{.Release.Name}}-tsync-conf
            mountPath: /etc/tsyncd/tsyncd.conf
            subPath: tsyncd.conf
        securityContext:
          privileged: true
      volumes:
        - name: devfs
          hostPath:
            path: /dev
        - name: {{.Release.Name}}-tsync-conf
          configMap:
            defaultMode: 0777
            name: {{.Release.Name}}-tsync-conf

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.Release.Name}}-{{.Values.NodeName}}-phc2sys
  name: {{.Release.Name}}-{{.Values.NodeName}}-phc2sys
  namespace: {{.Release.Namespace}}
  annotations:
    openshift.io/scc: {{.Release.Name}}
spec:
  selector:
    matchLabels:
      app: {{.Release.Name}}-{{.Values.NodeName}}-phc2sys
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.Release.Name}}-{{.Values.NodeName}}-phc2sys
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.Values.NodeName}}
{{- range $k, $v := .Values.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: sts-tsync
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.Values.Images.Phc2sys}}
        name: {{.Values.NodeName}}-phc2sys
        imagePullPolicy: Always
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{end}}
          - name: GPS_SVC_PORT
            value: "{{.Values.GpsSvcPort}}"
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          capabilities:
            add:
            - CAP_SYS_TIME
      volumes:
        - name: devfs
          hostPath:
            path: /dev

{{- if .EnableGPS }}

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{.Release.Name}}-{{.Values.NodeName}}-gpsd
  name: {{.Release.Name}}-{{.Values.NodeName}}-gpsd
  namespace: {{.Release.Namespace}}
  annotations:
    openshift.io/scc: {{.Release.Name}}
spec:
  selector:
    matchLabels:
      app: {{.Release.Name}}-{{.Values.NodeName}}-gpsd
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        app: {{.Release.Name}}-{{.Values.NodeName}}-gpsd
    spec:
      shareProcessNamespace: true
      nodeSelector:
        kubernetes.io/hostname: {{.Values.NodeName}}
{{- range $k, $v := .Values.NodeSelector }}
        {{ $k }}: "{{ $v }}"
{{- end }}
      serviceAccount: sts-tsync
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      containers:
      - image: {{.Values.Images.TsyncExtts}}
        name: {{.Values.NodeName}}-tsyncextts
        imagePullPolicy: Always
        securityContext:
          privileged: true
        volumeMounts:
          - name: devfs
            mountPath: /dev
        env:
          - name: WAIT_FOR_GPS
{{- if .EnableGPS}}
            value: "true"
{{- else}}
            value: "false"
{{end}}
{{- if eq .ProfileId 2}}
          - name: GM_MODE
            value: "-g"
{{end}}
          - name: GPS_SVC_PORT
            value: "{{.Values.GpsSvcPort}}"
      - image: {{.Values.Images.Gpsd}}
        imagePullPolicy: Always
        name: {{.Values.NodeName}}-gpsd
        # readinessProbe:
        #   tcpSocket:
        #     port: {{.Values.GpsSvcPort}}
        #   initialDelaySeconds: 60
        #   periodSeconds: 30
        # livenessProbe:
        #   tcpSocket:
        #     port: {{.Values.GpsSvcPort}}
        #   initialDelaySeconds: 60
        #   periodSeconds: 30
        ports:
        - containerPort: {{.Values.GpsSvcPort}}
          name: {{.ServicePrefix}}-gpsd
        env:
          - name: GPS_SVC_PORT
            value: "{{.Values.GpsSvcPort}}"
        volumeMounts:
          - name: devfs
            mountPath: /dev
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
          seLinuxOptions:
            level: "s0"
      volumes:
        - name: devfs
          hostPath:
            path: /dev
{{end}}
