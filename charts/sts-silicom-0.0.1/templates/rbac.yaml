{{- if .Values.InstallRbac}}
# Source: sts-silicom/templates/rbac.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{.Values.ServiceAccount}}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
spec:
  privileged: true
  hostNetwork: true
  allowedCapabilities:
  - '*'
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'

---

# Source: sts-silicom/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.Values.ServiceAccount}}
  namespace: {{.Release.Namespace}}

---

# Source: sts-silicom/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{.Values.ServiceAccount}}
  namespace: {{.Release.Namespace}}
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - {{.Values.ServiceAccount}}

---

# Source: sts-silicom/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{.Values.ServiceAccount}}
  namespace: {{.Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{.Values.ServiceAccount}}
subjects:
- kind: ServiceAccount
  name: {{.Values.ServiceAccount}}
  namespace: {{.Release.Namespace}}
{{end}}